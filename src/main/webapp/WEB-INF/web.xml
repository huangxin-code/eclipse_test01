<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
	<display-name>Archetype Created Web Application</display-name>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:bean.xml</param-value>
	</context-param>
	<!-- 配置ContextLoaderListener表示，该工程要以spring的方式启动。启动时会默认在/WEB-INF目录下查找applicationContext.xml 
		作为spring容器的配置文件，该文件里可以初始化一些bean -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- spring mvc 配置 -->
	<!-- 配置DispatcherServlet表示，该工程将采用springmvc的方式。启动时也会默认在/WEB-INF目录下查找XXX-servlet.xml作为配置文件， 
		XXX就是DispatcherServlet的名字，该文件中将配置两项重要的mvc特性：HandlerMapping,负责为DispatcherServlet这个前端控制器的请求查找Controller； 
		ViewResolver,负责为DispatcherServlet查找ModelAndView的视图解析器。 此处使用指定的配置文件spring-mvc.xml -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!--<param-value>/WEB-INF/classes/spring-mvc-servlet.xml</param-value> -->
			<param-value>classpath*:bean.xml</param-value>
		</init-param>
		<!-- 启动的时候加载，值越小，优先级越高 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	 <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
		<!-- 
			/*和/都是拦截所有的请求，
			/:会拦截所有请求，但是不会拦截*.jsp。能保证*.jsp的访问
			/*拦截范围更大，还会拦截*.jsp这些请求。一旦拦截jsp页面就不能正常访问。
		 -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
	

</web-app>
